package no.booking.GUI;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import no.booking.logic.Tour;
import no.booking.persistence.FakeDatabase;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;
import java.util.stream.Stream;

import static javax.swing.JOptionPane.showMessageDialog;

public class LeggTilOmvisning extends UIPage {
    public static final String NAME = "LeggTilOmvisning";

    private JButton cancelBtn;
    private JLabel leggTilOmvisning;
    private JPanel mainPanel;
    private JComboBox comboBox1;
    private JLabel velgLand;
    private JComboBox comboBox2;
    private JLabel velgBy;
    private JLabel beskrivelse;
    private JLabel pris;
    private JTextField textField1;
    private JButton leggTil;
    private JTextPane textPane1;
    private JButton button1;


    public LeggTilOmvisning(MainWindow mainWindow) {

        FakeDatabase fakeDatabase = new FakeDatabase();

        Tour dummyTour = new Tour(2, "Opplev vakre omstendigheter i Athen", "Hellas", "Athen",
                "Utforsk antikken i hjertet av Athen, fra Parthenon til lokale smaker. " +
                        "En reise gjennom tusenvis av år med historie og autentisk gresk kultur. " +
                        "\n \nAlder: 3-99. Maks 25 pr gruppe" +
                        "\n \nVarighet: 6 timer " +
                        "\n \nSpråk: Engelsk",
                "15.06.24",
                5000, "Athen Centrum");


        fakeDatabase.getTours();

        cancelBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                mainWindow.setPage(LoginGuide.NAME);
            }
        });

        // Legger til listen med alle land i DropDown meny
        /*for (String country : getAllCountries()) {
            comboBox1.addItem(country);
        }
         */
        comboBox1.addItem(dummyTour.getCountry());
        //legger til dummy-data i pris, by og tittel feltet
        comboBox2.addItem(dummyTour.getCity());
        textField1.setText(String.valueOf(dummyTour.getPrice_Per_Type_Ticket()));
        textPane1.setText(String.valueOf(dummyTour.getDescription()));
        button1.setText("Rapporter feil");
        button1.addActionListener(actionEvent -> {
            showMessageDialog(null, "Opprettelse av omvisning feilet. Prøv igjen senere");
        });
        leggTil.addActionListener(actionEvent -> {
            showMessageDialog(null, "Gratulerer, du har nå lagt til en omvisning. Følg med på" +
                    " Mine oversikter for mer informasjon");
        });
    }

    // Genererer liste med land
    public String[] getAllCountries() {
        String[] countries = new String[Locale.getISOCountries().length];
        String[] countryCodes = Locale.getISOCountries();
        for (int i = 0; i < countryCodes.length; i++) {
            Locale obj = new Locale("", countryCodes[i]);
            countries[i] = obj.getDisplayCountry();
        }
        countries = Stream.of(countries).sorted().toArray(String[]::new);
        return countries;
    }

    @Override
    public JPanel getMainPanel() {
        return mainPanel;
    }

    @Override
    public void setup() {

    }

    @Override
    public void teardown() {

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(9, 3, new Insets(0, 0, 0, 0), -1, -1));
        cancelBtn = new JButton();
        cancelBtn.setText("Tilbake");
        mainPanel.add(cancelBtn, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        mainPanel.add(spacer1, new GridConstraints(1, 0, 3, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        comboBox1 = new JComboBox();
        comboBox1.setEditable(false);
        mainPanel.add(comboBox1, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        velgLand = new JLabel();
        velgLand.setText("Velg land");
        mainPanel.add(velgLand, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        leggTilOmvisning = new JLabel();
        leggTilOmvisning.setText("Legg til omvisning");
        mainPanel.add(leggTilOmvisning, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        comboBox2 = new JComboBox();
        mainPanel.add(comboBox2, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        velgBy = new JLabel();
        velgBy.setText("Velg by");
        mainPanel.add(velgBy, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        beskrivelse = new JLabel();
        beskrivelse.setText("Beskrivelse");
        mainPanel.add(beskrivelse, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        mainPanel.add(spacer2, new GridConstraints(5, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        pris = new JLabel();
        pris.setText("Pris");
        mainPanel.add(pris, new GridConstraints(6, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField1 = new JTextField();
        mainPanel.add(textField1, new GridConstraints(7, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        leggTil = new JButton();
        leggTil.setText("Legg til");
        mainPanel.add(leggTil, new GridConstraints(8, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textPane1 = new JTextPane();
        textPane1.setText("");
        scrollPane1.setViewportView(textPane1);
        button1 = new JButton();
        button1.setText("Button");
        mainPanel.add(button1, new GridConstraints(8, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
